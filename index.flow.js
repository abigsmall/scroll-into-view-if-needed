/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.2.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

// @flow

declare module 'scroll-into-view-if-needed' {
  declare export type ScrollBehavior = 'auto' | 'instant' | 'smooth';
  declare export type ScrollLogicalPosition =
    | 'start'
    | 'center'
    | 'end'
    | 'nearest';
  declare export type ScrollMode = 'always' | 'if-needed';
  declare export type CustomScrollBoundary =
    | Element
    | CustomScrollBoundaryCallback;
  declare export interface BaseOptions {
    block?: ScrollLogicalPosition;
    inline?: ScrollLogicalPosition;
    scrollMode?: ScrollMode;
    boundary?: CustomScrollBoundary;
  }
  declare export interface CustomScrollBoundaryCallback {
    (parent: Element): boolean;
  }
  declare export type CustomScrollAction = {
    el: Element,
    top: number,
    left: number,
  };
  declare export interface CustomScrollBehaviorCallback<T> {
    (actions: CustomScrollAction[]): T;
  }
  declare export type StandardBehaviorOptions = {
    behavior?: ScrollBehavior,
  } & BaseOptions;
  declare export type CustomBehaviorOptions<T> = {
    behavior: CustomScrollBehaviorCallback<T>,
  } & BaseOptions;
  declare export interface Options<T> {
    behavior?: ScrollBehavior | CustomScrollBehaviorCallback<T>;
  }
  declare var scrollIntoView: {
    (target: Element, options: CustomBehaviorOptions<T>): T,
    (target: Element, options?: boolean | Options<any> | void): void,
  };
  declare module.exports: typeof scrollIntoView;
}
